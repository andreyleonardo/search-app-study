// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header renders without crash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    onChangeLanguage={[MockFunction]}
    selectedLanguage="pt"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="header__container row middle-xs"
      >
        <div
          className="header__title col-xs"
        >
          <FormattedMessage
            id="header.title"
            values={Object {}}
          />
        </div>
        <nav
          className="header__nav_bar col-xs"
        >
          <LanguageSelector
            onClick={[MockFunction]}
            selectedLanguage="pt"
          />
        </nav>
      </div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="header__title col-xs"
          >
            <FormattedMessage
              id="header.title"
              values={Object {}}
            />
          </div>,
          <nav
            className="header__nav_bar col-xs"
          >
            <LanguageSelector
              onClick={[MockFunction]}
              selectedLanguage="pt"
            />
          </nav>,
        ],
        "className": "header__container row middle-xs",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              id="header.title"
              values={Object {}}
            />,
            "className": "header__title col-xs",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "header.title",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <LanguageSelector
              onClick={[MockFunction]}
              selectedLanguage="pt"
            />,
            "className": "header__nav_bar col-xs",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onClick": [MockFunction],
              "selectedLanguage": "pt",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "nav",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header__container row middle-xs"
        >
          <div
            className="header__title col-xs"
          >
            <FormattedMessage
              id="header.title"
              values={Object {}}
            />
          </div>
          <nav
            className="header__nav_bar col-xs"
          >
            <LanguageSelector
              onClick={[MockFunction]}
              selectedLanguage="pt"
            />
          </nav>
        </div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="header__title col-xs"
            >
              <FormattedMessage
                id="header.title"
                values={Object {}}
              />
            </div>,
            <nav
              className="header__nav_bar col-xs"
            >
              <LanguageSelector
                onClick={[MockFunction]}
                selectedLanguage="pt"
              />
            </nav>,
          ],
          "className": "header__container row middle-xs",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                id="header.title"
                values={Object {}}
              />,
              "className": "header__title col-xs",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "header.title",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <LanguageSelector
                onClick={[MockFunction]}
                selectedLanguage="pt"
              />,
              "className": "header__nav_bar col-xs",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onClick": [MockFunction],
                "selectedLanguage": "pt",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "nav",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
