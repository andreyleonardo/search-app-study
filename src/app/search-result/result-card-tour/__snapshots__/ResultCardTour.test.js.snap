// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Result Card Tour renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResultCardTour
    currency="$"
    isSpecialOffer={false}
    onClick={[MockFunction]}
    price="30"
    rating="4.8"
    tabIndex={1}
    title="Tour Title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          Tour Title
        </p>,
        <p>
          4.8
        </p>,
        <p>
          $30
        </p>,
        <p />,
      ],
      "className": "result_card_tour",
      "onClick": [MockFunction],
      "onKeyPress": [MockFunction],
      "role": "button",
      "tabIndex": 1,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Tour Title",
        },
        "ref": null,
        "rendered": "Tour Title",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "4.8",
        },
        "ref": null,
        "rendered": "4.8",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "$30",
        },
        "ref": null,
        "rendered": "$30",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": false,
        },
        "ref": null,
        "rendered": false,
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Tour Title
          </p>,
          <p>
            4.8
          </p>,
          <p>
            $30
          </p>,
          <p />,
        ],
        "className": "result_card_tour",
        "onClick": [MockFunction],
        "onKeyPress": [MockFunction],
        "role": "button",
        "tabIndex": 1,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Tour Title",
          },
          "ref": null,
          "rendered": "Tour Title",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "4.8",
          },
          "ref": null,
          "rendered": "4.8",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "$30",
          },
          "ref": null,
          "rendered": "$30",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": false,
          },
          "ref": null,
          "rendered": false,
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
