// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Bar renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar
    handleSubmit={[MockFunction]}
    name="search_bar_input"
    onChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          className="search_bar__label"
          htmlFor="search-input-id"
        >
          Let's find a great experience
        </label>,
        <input
          autoComplete="off"
          className="search_bar__input"
          id="search-input-id"
          name="search_bar_input"
          onChange={[MockFunction]}
        />,
        <button
          className="search_bar__button"
          type="submit"
        >
          <SearchIcon
            height="32"
            viewBox="0 0 32 32"
            width="32"
          />
        </button>,
      ],
      "className": "search_bar",
      "id": "search-form-id",
      "name": "search_bar_form",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Let's find a great experience",
          "className": "search_bar__label",
          "htmlFor": "search-input-id",
        },
        "ref": null,
        "rendered": "Let's find a great experience",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "off",
          "className": "search_bar__input",
          "id": "search-input-id",
          "name": "search_bar_input",
          "onChange": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SearchIcon
            height="32"
            viewBox="0 0 32 32"
            width="32"
          />,
          "className": "search_bar__button",
          "type": "submit",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fill": undefined,
            "height": "32",
            "viewBox": "0 0 32 32",
            "width": "32",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            className="search_bar__label"
            htmlFor="search-input-id"
          >
            Let's find a great experience
          </label>,
          <input
            autoComplete="off"
            className="search_bar__input"
            id="search-input-id"
            name="search_bar_input"
            onChange={[MockFunction]}
          />,
          <button
            className="search_bar__button"
            type="submit"
          >
            <SearchIcon
              height="32"
              viewBox="0 0 32 32"
              width="32"
            />
          </button>,
        ],
        "className": "search_bar",
        "id": "search-form-id",
        "name": "search_bar_form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Let's find a great experience",
            "className": "search_bar__label",
            "htmlFor": "search-input-id",
          },
          "ref": null,
          "rendered": "Let's find a great experience",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "className": "search_bar__input",
            "id": "search-input-id",
            "name": "search_bar_input",
            "onChange": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SearchIcon
              height="32"
              viewBox="0 0 32 32"
              width="32"
            />,
            "className": "search_bar__button",
            "type": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "fill": undefined,
              "height": "32",
              "viewBox": "0 0 32 32",
              "width": "32",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
